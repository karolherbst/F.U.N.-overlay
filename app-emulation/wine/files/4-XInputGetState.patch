diff --git a/dlls/xinput1_3/xinput1_3_main.c b/dlls/xinput1_3/xinput1_3_main.c
index f63359d..d1e0762 100644
--- a/dlls/xinput1_3/xinput1_3_main.c
+++ b/dlls/xinput1_3/xinput1_3_main.c
@@ -372,6 +372,29 @@ DWORD WINAPI XInputGetKeystroke(DWORD dwUserIndex, DWORD dwReserve, PXINPUT_KEYS
 
 DWORD WINAPI XInputGetCapabilities(DWORD dwUserIndex, DWORD dwFlags, XINPUT_CAPABILITIES* pCapabilities)
 {
+#ifdef HAVE_CORRECT_LINUXINPUT_H
+    XINPUT_STATE tempstate;
+
+    TRACE("(%d %d %p)\n", dwUserIndex, dwFlags, pCapabilities);
+
+    if (!pCapabilities || dwUserIndex >= XUSER_MAX_COUNT || (dwFlags != 0 && dwFlags != XINPUT_FLAG_GAMEPAD))
+        return ERROR_BAD_ARGUMENTS;
+
+    if(XInputGetState(dwUserIndex, &tempstate) == ERROR_SUCCESS) {
+        pCapabilities->Type = XINPUT_DEVTYPE_GAMEPAD;
+        pCapabilities->SubType = XINPUT_DEVSUBTYPE_GAMEPAD;
+        pCapabilities->Flags = 0;
+        pCapabilities->Gamepad = xpads[dwUserIndex].state.Gamepad;
+#ifdef HAVE_STRUCT_FF_EFFECT_DIRECTION
+        pCapabilities->Vibration = *(PXINPUT_VIBRATION)&xpads[dwUserIndex].eff.u.rumble;
+#else  /* HAVE_STRUCT_FF_EFFECT_DIRECTION */
+        pCapabilities->Vibration = (XINPUT_VIBRATION){0,0};
+#endif  /* HAVE_STRUCT_FF_EFFECT_DIRECTION */
+        return ERROR_SUCCESS;
+    } else
+        return ERROR_DEVICE_NOT_CONNECTED;
+
+#else  /* HAVE_CORRECT_LINUXINPUT_H */
     static int warn_once;
 
     if (!warn_once++)
@@ -383,6 +406,7 @@ DWORD WINAPI XInputGetCapabilities(DWORD dwUserIndex, DWORD dwFlags, XINPUT_CAPA
         /* If controller exists then return ERROR_SUCCESS */
     }
     return ERROR_BAD_ARGUMENTS;
+#endif  /* HAVE_CORRECT_LINUXINPUT_H */
 }
 
 DWORD WINAPI XInputGetDSoundAudioDeviceGuids(DWORD dwUserIndex, GUID* pDSoundRenderGuid, GUID* pDSoundCaptureGuid)
